### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules main.ml > main.ml.depends # cached
# Target: bots.ml.depends, tags: { extension:ml, file:bots.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules bots.ml > bots.ml.depends # cached
# Target: babybot.ml.depends, tags: { extension:ml, file:babybot.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules babybot.ml > babybot.ml.depends # cached
# Target: shared/constant.ml.depends, tags: { extension:ml, file:shared/constant.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules shared/constant.ml > shared/constant.ml.depends # cached
# Target: shared/definition.ml.depends, tags: { extension:ml, file:shared/definition.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules shared/definition.ml > shared/definition.ml.depends # cached
# Target: shared/definition.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:shared/definition.cmo, file:shared/definition.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/definition.cmo shared/definition.ml # cached
# Target: shared/constant.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:shared/constant.cmo, file:shared/constant.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/constant.cmo shared/constant.ml # cached
# Target: shared/registry.ml.depends, tags: { extension:ml, file:shared/registry.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules shared/registry.ml > shared/registry.ml.depends # cached
# Target: shared/registry.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:shared/registry.cmo, file:shared/registry.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/registry.cmo shared/registry.ml # cached
# Target: shared/util.ml.depends, tags: { extension:ml, file:shared/util.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules shared/util.ml > shared/util.ml.depends # cached
# Target: shared/util.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:shared/util.cmo, file:shared/util.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/util.cmo shared/util.ml # cached
# Target: babybot.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:babybot.cmo, file:babybot.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o babybot.cmo babybot.ml # cached
# Target: bots.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:bots.cmo, file:bots.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o bots.cmo bots.ml # cached
# Target: play.ml.depends, tags: { extension:ml, file:play.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules play.ml > play.ml.depends # cached
# Target: game.mli.depends, tags: { extension:mli, file:game.mli, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules game.mli > game.mli.depends # cached
# Target: game.cmi, tags: { byte, compile, extension:mli, file:game.mli, interf, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o game.cmi game.mli # cached
# Target: shared/print.ml.depends, tags: { extension:ml, file:shared/print.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules shared/print.ml > shared/print.ml.depends # cached
# Target: shared/print.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:shared/print.cmo, file:shared/print.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/print.cmo shared/print.ml # cached
# Target: play.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:play.cmo, file:play.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o play.cmo play.ml # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o main.cmo main.ml # cached
# Target: main.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:main.d.cmo, file:main.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o main.d.cmo main.ml # cached
# Target: bots.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:bots.d.cmo, file:bots.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o bots.d.cmo bots.ml # cached
# Target: play.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:play.d.cmo, file:play.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o play.d.cmo play.ml # cached
# Target: shared/print.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:shared/print.d.cmo, file:shared/print.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/print.d.cmo shared/print.ml # cached
# Target: shared/registry.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:shared/registry.d.cmo, file:shared/registry.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/registry.d.cmo shared/registry.ml # cached
# Target: babybot.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:babybot.d.cmo, file:babybot.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o babybot.d.cmo babybot.ml # cached
# Target: shared/constant.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:shared/constant.d.cmo, file:shared/constant.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/constant.d.cmo shared/constant.ml # cached
# Target: shared/definition.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:shared/definition.d.cmo, file:shared/definition.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/definition.d.cmo shared/definition.ml # cached
# Target: shared/util.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:shared/util.d.cmo, file:shared/util.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o shared/util.d.cmo shared/util.ml # cached
# Target: game.ml.depends, tags: { extension:ml, file:game.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules game.ml > game.ml.depends
# Target: player.ml.depends, tags: { extension:ml, file:player.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules player.ml > player.ml.depends # cached
# Target: player.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o player.cmo player.ml # cached
# Target: structures.ml.depends, tags: { extension:ml, file:structures.ml, ocaml, ocamldep, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamldep -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -modules structures.ml > structures.ml.depends # cached
# Target: structures.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:structures.cmo, file:structures.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o structures.cmo structures.ml # cached
# Target: game.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:game.d.cmo, file:game.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o game.d.cmo game.ml
# Target: player.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:player.d.cmo, file:player.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o player.d.cmo player.ml # cached
# Target: structures.d.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:structures.d.cmo, file:structures.ml, implem, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), quiet, syntax(bin_prot), syntax(camlp4o), thread }
ocamlfind ocamlc -c -warn-error +a -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck -syntax bin_prot -syntax camlp4o -I shared -o structures.d.cmo structures.ml # cached
# Target: main.d.byte, tags: { byte, debug, dont_link_with, extension:byte, file:main.d.byte, link, ocaml, package(oUnit), package(pa_ounit), package(pa_ounit.syntax), package(qcheck), program, quiet, thread }
ocamlfind ocamlc assertions.cma -linkpkg -g -thread -package pa_ounit.syntax -package oUnit -package pa_ounit -package qcheck shared/definition.d.cmo shared/constant.d.cmo shared/registry.d.cmo shared/util.d.cmo babybot.d.cmo bots.d.cmo shared/print.d.cmo player.d.cmo structures.d.cmo game.d.cmo play.d.cmo main.d.cmo -o main.d.byte
# Compilation successful.
